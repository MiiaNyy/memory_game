{"version":3,"sources":["webpack://memory_game/webpack/runtime/chunk loaded","webpack://memory_game/./src/components/Styles/generalStyles.js","webpack://memory_game/./src/components/Styles/startingScreenStyles.js","webpack://memory_game/./src/components/Header.js","webpack://memory_game/./src/components/Styles/messagesStyles.js","webpack://memory_game/./src/components/Styles/gameboardStyles.js","webpack://memory_game/./src/helpers/getCardsFromShuffledArr.js","webpack://memory_game/./src/components/Styles/characterCardStyles.js","webpack://memory_game/./src/components/gameboard/CharacterCard.js","webpack://memory_game/./src/components/gameboard/Scoreboard.js","webpack://memory_game/./src/data/characterData.js","webpack://memory_game/./src/helpers/getCurrentCardDeck.js","webpack://memory_game/./src/helpers/resetGame.js","webpack://memory_game/./src/components/gameEndedMessages/Message.js","webpack://memory_game/./src/components/gameEndedMessages/GameEndedMessage.js","webpack://memory_game/./src/helpers/getMaximunScore.js","webpack://memory_game/./src/components/gameboard/Gameboard.js","webpack://memory_game/./src/helpers/localStorage.js","webpack://memory_game/./src/components/StartingScreen.js","webpack://memory_game/./src/components/App.js","webpack://memory_game/./src/index.js","webpack://memory_game/webpack/bootstrap","webpack://memory_game/webpack/runtime/compat get default export","webpack://memory_game/webpack/runtime/define property getters","webpack://memory_game/webpack/runtime/global","webpack://memory_game/webpack/runtime/hasOwnProperty shorthand","webpack://memory_game/webpack/runtime/publicPath","webpack://memory_game/webpack/runtime/jsonp chunk loading","webpack://memory_game/webpack/startup"],"names":["deferred","Container","styled","props","gameboard","css","Paragraph","BtnContainer","start","Btn","easy","hard","StartBtn","active","HeaderTitle","Header","Title","src","title","alt","MessageContainer","Flex","message_point_cont","messsage_txt_cont","message_last_level","NewHighScoreMessage","GameboardContainer","ScoreContainer","primary","arr","map","a","sort","Math","random","value","b","CharacterImage","Card","characterObj","obj","stateObj","onClick","currentCard","id","currentCharacter","clickedCards","length","i","setGameIsOver","checkForGameOver","setClickedCards","prev","setCurrentScore","currentScore","highScore","setHighScore","setHighScoreAnimation","setTimeout","maxScore","setUserWon","checkIfUserWon","setCurrentCards","getCardsFromShuffledArr","currentCards","handleCardClick","name","image","description","gameMode","artemis","uuidv4","ddGirls","luna","kakyuu","nehelenia","beryl","serenity","chibiMoon","jupiter","mars","moon","venus","galaxia","mercury","neptune","pluto","saturn","starLights","uranus","tuxedoMask","numOfCards","cardDeck","characterData","filter","index","resetGame","resetStates","getCurrentCardDeck","setSlideAnimation","ResetGameBtns","gameIsOver","setGameMode","useState","toggleSlideAnimation","animation","lastLevelWon","className","style","maxHeight","img","transform","staff","location","reload","header","children","images","gameOver","crying","userWon","happy","winner","dataName","stateUpdater","stateContent","highScoreAnimation","getMaximumScore","useEffect","localStorage","getItem","JSON","parse","statesName","setItem","stringify","setItemsToStorage","item","key","StartBtnContainer","difficultySelected","setGameIsStarted","console","log","setDifficultySelected","selectLevel","level","gameIsStarted","ReactDOM","document","getElementById","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","currentScript","scripts","getElementsByTagName","Error","replace","p","installedChunks","179","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"mappings":"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","file":"bundle.7de3dccf35c0e620ccf1.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","import styled, { css, keyframes } from \"styled-components\";\r\n\r\n// GENERAL COMPONENTS\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 90%;\r\n  max-width: 1200px;\r\n  margin: 1em auto 0;\r\n  background-color: rgba(0, 7, 15, 0.56);\r\n  padding-bottom: 1em;\r\n  ${ props=>\r\n          props.gameboard && css`\r\n            padding-bottom: 0.6em;\r\n            margin-bottom: 2em;\r\n            margin-top: 0` };\r\n  @media (min-width: 900px) {\r\n    padding: 0 5em 1em 5em;\r\n  }\r\n`;\r\n\r\nconst Paragraph = styled.p\r\n    `\r\n      width: 90%;\r\n      max-width: 700px;\r\n      text-align: center;\r\n      margin: 0 auto;\r\n      padding-bottom: 2em;\r\n      color: #fdefef;\r\n    `;\r\n\r\n// BUTTONS\r\nconst BtnContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  gap: 1em;\r\n  margin-bottom: 2em;\r\n  transition: all 0.2s ease-in-out;\r\n  ${ props=>props.start && css`\r\n            padding-bottom: 2em` };\r\n  @media (min-width: 700px) {\r\n    gap: 3em\r\n  }\r\n  \r\n`;\r\n\r\nconst Btn = styled.button`\r\n  background-color: ${ props=>props.easy\r\n          ? '#ffd166'\r\n          : props.hard\r\n                  ? '#ffafcc'\r\n                  : '#82ddf0' };\r\n\r\n  border: 2px solid ${ props=>props.easy\r\n          ? '#faa13c'\r\n          : props.hard\r\n                  ? '#f66b92'\r\n                  : '#00a5bd'\r\n  };\r\n\r\n  &:hover {\r\n    background-color: #AFB3F7;\r\n    border: 2px solid #7479ff;\r\n    transform: scale(1.1);\r\n  }\r\n;\r\n\r\n  &:focus {\r\n    background-color: #AFB3F7;\r\n    border: 2px solid #82ddf0;\r\n    transform: scale(1.1);\r\n    outline: 2px solid #82ddf0;\r\n  }\r\n;\r\n`;\r\n\r\n\r\nexport {\r\n    Container,\r\n    Paragraph,\r\n    Btn,\r\n    BtnContainer\r\n\r\n};","import styled from \"styled-components\";\r\n\r\nconst StartBtn = styled.button`\r\n  font-size: ${ props=>(props.active ? \"1.2rem\" : \"1rem\") };\r\n  background-color: ${ props=>(props.active ? \"#F47AE1\" : \"rgba(0, 7, 15, 0.56)\") };\r\n  border: ${ props=>(props.active ? \"2px solid #f66b92\" : \"2px solid rgba(0, 7, 15, 0.56)\") };\r\n\r\n  &:hover {\r\n    background-color: ${ props=>(props.active ? \"#AFB3F7\" : \"rgba(0, 7, 15, 0.56)\") };\r\n    border: 2px solid ${ props=>(props.active ? \"#7479ff\" : \"rgba(0, 7, 15, 0.56)\") };\r\n    transform: ${ props=>(props.active ? \"scale(1.1)\" : \"none\") };;\r\n  }\r\n`;\r\n\r\n//HEADER\r\nconst HeaderTitle = styled.div`\r\n  padding: 2em 1em 0 1em;\r\n  text-align: center;\r\n`;\r\n\r\n\r\nexport { HeaderTitle, StartBtn };","import React from \"react\";\r\nimport title from \"../images/title.png\"\r\n\r\nimport { Container, Paragraph } from './Styles/generalStyles';\r\nimport { HeaderTitle } from \"./Styles/startingScreenStyles\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <Container>\r\n            <Title/>\r\n            <Paragraph>\r\n                This is Sailor Moon inspired memory game. Your job is to click every character but only once. If you get\r\n                all of the characters you win! <br/> Good luck ✨\r\n            </Paragraph>\r\n        </Container>\r\n    )\r\n}\r\n\r\nfunction Title() {\r\n    return (\r\n        <HeaderTitle>\r\n            <img src={ title } alt=\"sailor moon logo\"/>\r\n        </HeaderTitle>\r\n    )\r\n}\r\n\r\nexport {Title, Header};\r\n","// GAME ENDED MESSAGES\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst MessageContainer = styled.div`\r\n  position: fixed;\r\n  width: 90%;\r\n  max-width: 650px;\r\n  padding: 1em 1em 0;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  border: 10px solid #dfb0ff;\r\n  background-color: rgba(255, 255, 255, 0.92);\r\n  text-align: center;\r\n\r\n\r\n  & > h2 {\r\n    font-weight: 400;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n    text-decoration: underline;\r\n    padding: 0 0 0.5em;\r\n    @media (min-width: 500px) {\r\n      font-size: 3rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Flex = styled.div`\r\n  ${ props=>\r\n          props.message_point_cont && css`\r\n            //margin: 0 auto;\r\n            margin: 1em auto;\r\n            width: 100%;\r\n            max-width: 350px;\r\n            padding: 0 0.2em 0.5em;\r\n            border-bottom: 2px solid #dfb0ff;` };\r\n  ${ props=>\r\n          props.messsage_txt_cont && css`\r\n            flex-direction: column;\r\n            text-align: center;` };\r\n  ${ props=>\r\n          props.message_last_level && css`\r\n            width: 95%;\r\n            max-width: 500px;\r\n            margin: 0 auto;\r\n            padding-bottom: 1em;\r\n\r\n          ` };\r\n  @media (min-width: 550px) {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst NewHighScoreMessage = styled.div`\r\n  width: 90%;\r\n  max-width: 300px;\r\n  position: fixed;\r\n  top: 5%;\r\n  right: 5%;\r\n  padding: 0.5em 0;\r\n  text-align: center;\r\n  border: 10px solid #f66b92;\r\n  background-color: rgba(255, 255, 255, 0.92);\r\n  -webkit-box-shadow: 3px 3px 12px 0 rgba(50, 50, 50, 0.45);\r\n  -moz-box-shadow: 3px 3px 12px 0 rgba(50, 50, 50, 0.45);\r\n  box-shadow: 3px 3px 12px 0 rgba(50, 50, 50, 0.45);\r\n  transition: all 0.8s ease-in-out;\r\n  opacity: 0;\r\n\r\n  & > p {\r\n    font-size: 0.9rem;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport { MessageContainer, Flex, NewHighScoreMessage };","// Gameboard\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst GameboardContainer = styled.main\r\n    `\r\n      display: flex;\r\n      justify-content: space-evenly;\r\n      flex-wrap: wrap;\r\n      gap: 2em;\r\n      margin-bottom: 2em;\r\n      padding-top: 1em;\r\n    `\r\n;\r\n\r\n// Scoreboard\r\nconst ScoreContainer = styled.section\r\n    `\r\n      display: flex;\r\n      justify-content: space-around;\r\n      gap: 1em;\r\n      flex-direction: column-reverse;\r\n      padding: 1em;\r\n      text-align: center;\r\n      background-color: rgba(0, 7, 15, 0.41);\r\n      color: #e0e0e0;\r\n      font-weight: 700;\r\n      letter-spacing: 0.1em;\r\n      ${ props=>\r\n              props.primary && css`\r\n                position: -webkit-sticky; /* Safari */\r\n                position: sticky;\r\n                top: 0;\r\n                font-size: 1.2rem;\r\n                background-color: rgba(0, 7, 15, 0.71)` };\r\n\r\n      @media (min-width: 550px) {\r\n        flex-direction: row;\r\n        align-items: center;\r\n      }\r\n    `\r\n;\r\n\r\nexport { GameboardContainer, ScoreContainer };","// Takes in a array and shuffles the order and returns right amount of cards depending on game level\r\nfunction getCardsFromShuffledArr(arr) {\r\n\r\n    return arr\r\n        .map((a)=>({sort: Math.random(), value: a}))\r\n        .sort((a, b)=>a.sort - b.sort)\r\n        .map((a)=>a.value)\r\n\r\n}\r\n\r\nexport default getCardsFromShuffledArr;","// CARDS\r\nimport styled from \"styled-components\";\r\n\r\nconst CharacterImage = styled.img\r\n    `\r\n      width: 100%;\r\n      max-height: 170px;\r\n      object-fit: cover;\r\n      object-position: center top;\r\n    `\r\n;\r\n\r\nconst Card = styled.div\r\n    `\r\n      display: flex;\r\n      flex-direction: column-reverse;\r\n      width: 100%;\r\n      max-width: 180px;\r\n      margin-top: 2em;\r\n      text-align: center;\r\n      background: #FFDDE1; /* fallback for old browsers */\r\n      background: -webkit-linear-gradient(to bottom, #ffdde1, #ee9ca7); /* Chrome 10-25, Safari 5.1-6 */\r\n      background: linear-gradient(to bottom, #ffdde1, #ee9ca7); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n      border: 10px solid palevioletred;\r\n      transition: all 0.2s ease-in-out;\r\n\r\n      &:hover {\r\n        transform: scale(1.1);\r\n      }\r\n    ;\r\n\r\n      & > h3 {\r\n        padding: 0.5em 0;\r\n        margin-bottom: 0;\r\n        font-size: 1.5rem;\r\n      }\r\n    `\r\n;\r\n\r\nexport { Card, CharacterImage };","import getCardsFromShuffledArr from \"../../helpers/getCardsFromShuffledArr\";\r\nimport { CharacterImage, Card } from \"../Styles/characterCardStyles\"\r\nimport React from \"react\";\r\n\r\n\r\nfunction CharacterCard(props) {\r\n    const characterObj = props.obj;\r\n    const stateObj = props.stateObj;\r\n\r\n    return (\r\n        <Card onClick={ ()=>handleCardClick(stateObj, characterObj) } id={ characterObj.id }>\r\n            <h3>{ characterObj.name }</h3>\r\n            <CharacterImage src={ characterObj.image } alt={ characterObj.description }/>\r\n        </Card>\r\n    )\r\n}\r\n\r\nfunction handleCardClick(stateObj, characterObj) {\r\n    let currentCard = characterObj.id;\r\n    let gameIsOver = checkForGameOver(stateObj, currentCard);\r\n\r\n    if ( !gameIsOver ) {\r\n        stateObj.setClickedCards((prev)=>{\r\n            return [...prev, currentCard]\r\n        });\r\n        stateObj.setCurrentScore((prev)=>prev + 1);\r\n        checkForHighScore(stateObj);\r\n        checkIfUserWon(stateObj);\r\n        stateObj.setCurrentCards(()=>getCardsFromShuffledArr(stateObj.currentCards));\r\n    }\r\n}\r\n\r\n\r\nfunction checkIfUserWon(obj) {\r\n    if ( obj.currentScore === (obj.maxScore - 1) || obj.currentScore >= obj.maxScore ) {\r\n        obj.setUserWon(true);\r\n    }\r\n}\r\n\r\nfunction checkForHighScore(obj) {\r\n    if ( obj.currentScore === (obj.highScore) || obj.currentScore >= obj.highScore ) {\r\n        obj.setHighScore((prev)=>prev + 1);\r\n        obj.setHighScoreAnimation(true);\r\n        setTimeout(()=>{\r\n            obj.setHighScoreAnimation(false);\r\n        }, 2500)\r\n    }\r\n}\r\n\r\nfunction checkForGameOver(stateObj, currentCharacter) {\r\n    let clickedCards = stateObj.clickedCards;\r\n\r\n    if ( clickedCards.length > 0 ) {\r\n        for (let i = 0; i < clickedCards.length; i++) {\r\n            if ( currentCharacter === clickedCards[i] ) {\r\n                stateObj.setGameIsOver(true);\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\nexport default CharacterCard;","import getCardsFromShuffledArr from \"../../helpers/getCardsFromShuffledArr\";\r\nimport React from \"react\";\r\nimport { Btn } from \"../Styles/generalStyles.js\"\r\nimport { ScoreContainer } from \"../Styles/gameboardStyles\";\r\n\r\n\r\nfunction Scoreboard(props) {\r\n    const stateObj = props.stateObj;\r\n    return (\r\n        <>\r\n            <ScoreContainer>\r\n                <p>Max score { stateObj.maxScore }</p>\r\n                <p>Difficulty level: { stateObj.gameMode }</p>\r\n            </ScoreContainer>\r\n\r\n            <ScoreContainer primary>\r\n                <p>Current Score { stateObj.currentScore }</p>\r\n                <p>High score { stateObj.highScore }</p>\r\n                <Btn onClick={ ()=>stateObj.setCurrentCards(getCardsFromShuffledArr(stateObj.currentCards)) }>\r\n                    Shuffle\r\n                </Btn>\r\n            </ScoreContainer>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Scoreboard;\r\n\r\n","import {v4 as uuidv4} from 'uuid';\r\n\r\nimport artemis from '../images/Artemis.png';\r\nimport ddGirls from '../images/dd-girls.png';\r\nimport luna from '../images/luna.png';\r\nimport kakyuu from '../images/princess-kakyuu.png';\r\nimport nehelenia from '../images/Queen_Nehelenia.jpg';\r\nimport beryl from '../images/queen-beryljpg.jpg';\r\nimport serenity from '../images/queen-serenity.jpg';\r\nimport chibiMoon from '../images/Chibi_Bust.png';\r\nimport jupiter from '../images/Jupiter_Bust.png';\r\nimport mars from '../images/Mars_Bust.png';\r\nimport moon from '../images/Moon_Bust.png';\r\nimport venus from '../images/Venus_Bust.png';\r\nimport galaxia from '../images/sailor-galaxia.jpg';\r\nimport mercury from '../images/Mercury_Bust.png';\r\nimport neptune from '../images/Neptune_Bust.png';\r\nimport pluto from '../images/Sailor-Pluto.png';\r\nimport saturn from '../images/Sailor_Saturn.png';\r\nimport uranus from '../images/Uranus_Bust.png';\r\nimport starLights from '../images/starlights.jpg'\r\nimport tuxedoMask from '../images/tuxedo-mask.jpg';\r\n\r\nconst characterData = [\r\n    {\r\n        name: 'Artemis',\r\n        image: artemis,\r\n        description: 'White cat with moon circle in his forehead',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: 'DD-Girls',\r\n        image: ddGirls,\r\n        description: 'Five different color villain looking women',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: 'Luna',\r\n        image: luna,\r\n        id: uuidv4(),\r\n        description: '',\r\n    },\r\n    {\r\n        name: 'Princess Kakyuu',\r\n        image: kakyuu,\r\n        description: 'Black cat with moon circle in his forehead',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: 'Queen Nehelenia',\r\n        image: nehelenia,\r\n        description: 'Black haired woman with green and white dress',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: 'Queen Beryl',\r\n        image: beryl,\r\n        description: 'Red haired woman with long staff and purple dress',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: 'Queen Serenity',\r\n        image: serenity,\r\n        description: 'White haired woman with gray eyes',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: 'Sailor Chibi Moon',\r\n        image: chibiMoon,\r\n        description: 'Little girl in a pink sailor outfit',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: 'Sailor Jupiter',\r\n        image: jupiter,\r\n        description: 'Brown haired woman with white and green colored sailor outfit',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: 'Sailor Mars',\r\n        image: mars,\r\n        description: 'Black haired woman with green and white sailor outfit ',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: 'Sailor Moon',\r\n        image: moon,\r\n        description: 'Main character with long blond hair',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: 'Sailor Venus',\r\n        image: venus,\r\n        description: 'Blond haired woman with yellow sailor outfit',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: 'Sailor Galaxia',\r\n        image: galaxia,\r\n        description: 'Royalty with long sword and gold armor',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: 'Sailor Mercury',\r\n        image: mercury,\r\n        description: 'Woman with short blue hair and blue sailor outfit',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: 'Sailor Neptune',\r\n        image: neptune,\r\n        description: 'Little girl with green hair and green and blue colored sailor outfit',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: 'Sailor Pluto',\r\n        image: pluto,\r\n        description: 'Green hair and sailor outfit with long staff',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: 'Sailor Saturn',\r\n        image: saturn,\r\n        description: 'Shiny black hair, purple sailor outfit and long staff',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: \"Sailor Starlight's\",\r\n        image: starLights,\r\n        description: 'Three short haired woman with black bikinis',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: 'Sailor Uranus',\r\n        image: uranus,\r\n        description: 'Woman with short blond hair',\r\n        id: uuidv4(),\r\n    },\r\n    {\r\n        name: 'Tuxedo Mask',\r\n        image: tuxedoMask,\r\n        description: 'A man with tuxedo, black cape and a hat',\r\n        id: uuidv4(),\r\n    },\r\n];\r\n\r\nexport default characterData;\r\n\r\n\r\n","import getCardsFromShuffledArr from \"./getCardsFromShuffledArr\";\r\nimport characterData from \"../data/characterData\";\r\n\r\nfunction getCurrentCardDeck(gameMode) {\r\n\r\n    // This returns shuffled card deck, which includes ALL of the cards\r\n    const cardDeck = getCardsFromShuffledArr(characterData);\r\n    let numOfCards;\r\n\r\n    switch (gameMode) {\r\n        case 'Easy':\r\n            numOfCards = 8;\r\n            break;\r\n        case 'Medium':\r\n            numOfCards = 12;\r\n            break;\r\n        case 'Hard':\r\n            numOfCards = 20;\r\n            break;\r\n    }\r\n    // This returns right amount of cards that we use in different levels\r\n    return cardDeck.filter((a, index)=>index < numOfCards);\r\n}\r\n\r\nexport default getCurrentCardDeck;","import getCurrentCardDeck from \"./getCurrentCardDeck\";\r\n\r\nfunction playNextLevel(obj) {\r\n    resetStates(obj);\r\n    setTimeout(()=>{\r\n        obj.setUserWon(false);\r\n    }, 1000);\r\n\r\n    if ( obj.gameMode === 'Easy' ) {\r\n        obj.setGameMode('Medium');\r\n        obj.setCurrentCards(()=>getCurrentCardDeck('Medium'));\r\n    } else if ( obj.gameMode === 'Medium' ) {\r\n        obj.setGameMode('Hard');\r\n        obj.setCurrentCards(()=>getCurrentCardDeck('Hard'));\r\n    }\r\n}\r\n\r\nfunction resetGame(obj) {\r\n    resetStates(obj);\r\n    setTimeout(()=>{\r\n        if ( obj.gameMode === 'Hard' ) {\r\n            obj.setUserWon(false);\r\n        } else {\r\n            obj.setGameIsOver(false);\r\n        }\r\n    }, 1000);\r\n    obj.setCurrentCards(()=>getCurrentCardDeck(obj.gameMode));\r\n}\r\n\r\nfunction resetStates(obj) {\r\n    obj.setCurrentScore(0);\r\n    obj.setClickedCards([]);\r\n    obj.setSlideAnimation(true);\r\n}\r\n\r\n\r\nexport { resetGame, playNextLevel };","import React, { useState } from \"react\";\r\n\r\nimport { Btn, BtnContainer } from \"../Styles/generalStyles\";\r\nimport { Flex, MessageContainer } from \"../Styles/messagesStyles\"\r\nimport { resetGame, playNextLevel } from \"../../helpers/resetGame\";\r\n\r\nimport staff from \"../../images/staff.png\";\r\n\r\nfunction Message(props) {\r\n    let stateObj = props.stateObj;\r\n    // When game over or user won, animation starts and when user clicks a button another animation starts that\r\n    // takes message away from screen\r\n    const [toggleSlideAnimation, setSlideAnimation] = useState(false);\r\n    const animation = toggleSlideAnimation ? \"toggleOut\" : \"toggleIn\";\r\n    stateObj.setSlideAnimation = setSlideAnimation;\r\n\r\n    if ( props.lastLevelWon ) {\r\n        return (\r\n            <MessageContainer className={ animation }>\r\n                <img style={{maxHeight: \"200px\"}} src={ props.image.img } alt={ props.image.description }/>\r\n                <h2>✨ Congratulations ✨</h2>\r\n                <Flex message_last_level>\r\n                    <div>\r\n                        <p>You beat the hardest level! </p>\r\n                        <p>You deserve the title of Sailor Guardian and this staff to keep you safe in your future\r\n                            adventures.</p>\r\n                    </div>\r\n                    <img style={{transform: \"rotate(20deg)\"}} src={ staff } alt=\"moon staff\"/>\r\n                </Flex>\r\n                <BtnContainer>\r\n                    <Btn onClick={ ()=>location.reload() } easy>🡠 Home</Btn>\r\n                    <Btn onClick={ ()=>resetGame(stateObj) } hard>Play Again</Btn>\r\n                </BtnContainer>\r\n            </MessageContainer>\r\n        )\r\n\r\n    } else {\r\n        return (\r\n            <MessageContainer className={ animation }>\r\n                <h2>{ props.header }</h2>\r\n                <Flex>\r\n                    <Flex messsage_txt_cont>\r\n                        <p>{ props.children }</p>\r\n                        <Flex message_point_cont>\r\n                            <p>Your points: { stateObj.currentScore } </p>\r\n                            <p>Max points: { stateObj.maxScore } </p>\r\n                        </Flex>\r\n                        <BtnContainer>\r\n                            <Btn onClick={ ()=>location.reload() } easy>🡠 Home</Btn>\r\n                            <ResetGameBtns stateObj={ stateObj }/>\r\n                        </BtnContainer>\r\n                    </Flex>\r\n                    <img src={ props.image.img } alt={ props.image.description }/>\r\n                </Flex>\r\n            </MessageContainer>\r\n        )\r\n    }\r\n}\r\n/*style={{maxHeight: \"250px\", maxWidth: \"50%\"}}*/\r\n\r\nfunction ResetGameBtns(props) {\r\n    if ( props.stateObj.gameIsOver ) {\r\n        return <Btn onClick={ ()=>resetGame(props.stateObj) } hard>Try Again</Btn>\r\n    } else {\r\n        return <Btn onClick={ ()=>playNextLevel(props.stateObj) } hard>Next level 🡢</Btn>\r\n    }\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport crying from \"../../images/crying.png\"\r\nimport happy from \"../../images/happy.png\";\r\nimport winner from \"../../images/winner.png\";\r\nimport Message from \"./Message\";\r\n\r\nconst images = {\r\n    gameOver: {\r\n        img: crying,\r\n        description: 'sailor moon crying'\r\n    },\r\n    userWon: {\r\n        img: happy,\r\n        description: 'sailor moon winking'\r\n    },\r\n    lastLevelWon: {\r\n        img: winner,\r\n        description: \"sailor guardians\",\r\n    }\r\n}\r\n\r\nfunction GameEndedMessage(props) {\r\n    let stateObj = props.stateObj;\r\n    if ( stateObj.gameIsOver ) {\r\n        return (\r\n            <Message image={ images.gameOver } header=\"Game over\" stateObj={ stateObj }>\r\n                Unfortunately you clicked the same character twice and LOST!\r\n            </Message>\r\n        )\r\n    } else if ( stateObj.userWon && stateObj.gameMode !== 'Hard' ) {\r\n        return (\r\n            <Message image={ images.userWon } header=\"✨ Congratulations ✨\" stateObj={ stateObj }>\r\n                You got all of the characters without clicking the same character twice.\r\n            </Message>\r\n        )\r\n    } else if ( stateObj.userWon && stateObj.gameMode === 'Hard') {\r\n        return (\r\n            <Message image={images.lastLevelWon} stateObj={ stateObj } lastLevelWon={true}/>\r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n\r\n\r\nexport default GameEndedMessage;","function getMaximumScore(gameMode) {\r\n    if ( gameMode === 'Easy' ) {\r\n        return 8;\r\n    } else if ( gameMode === 'Medium' ) {\r\n        return 12;\r\n    } else {\r\n        return 20;\r\n    }\r\n}\r\n\r\nexport default getMaximumScore;","import React, { useState } from \"react\";\r\nimport { Container } from '../Styles/generalStyles'\r\nimport { NewHighScoreMessage } from \"../Styles/messagesStyles\";\r\nimport { GameboardContainer } from \"../Styles/gameboardStyles\";\r\n\r\nimport CharacterCard from \"./CharacterCard\";\r\nimport Scoreboard from \"./Scoreboard\";\r\nimport GameEndedMessage from \"../gameEndedMessages/GameEndedMessage\";\r\n\r\nimport getCurrentCardDeck from \"../../helpers/getCurrentCardDeck\";\r\nimport getMaximumScore from \"../../helpers/getMaximunScore\";\r\nimport { setItemsToStorage, getItemsFromStorage } from \"../../helpers/localStorage\"\r\n\r\nfunction GameBoard(props) {\r\n\r\n    const [currentCards, setCurrentCards] = useState(getCurrentCardDeck(props.gameMode));\r\n    const [clickedCards, setClickedCards] = useState([]);\r\n\r\n    const [currentScore, setCurrentScore] = useState(19);\r\n    const [highScore, setHighScore] = useState(0);\r\n\r\n    const [userWon, setUserWon] = useState(false);\r\n    const [gameIsOver, setGameIsOver] = useState(false);\r\n\r\n    const [highScoreAnimation, setHighScoreAnimation] = useState(false);\r\n\r\n    const animation = highScoreAnimation ? \"high-score_animation\" : \"hidden\";\r\n    const maxScore = getMaximumScore(props.gameMode);\r\n\r\n    const stateObj = {\r\n        currentScore,\r\n        setCurrentScore,\r\n        highScore,\r\n        setHighScore,\r\n        currentCards,\r\n        setCurrentCards,\r\n        clickedCards,\r\n        setClickedCards,\r\n        gameMode: props.gameMode,\r\n        setGameMode: props.setGameMode,\r\n        maxScore,\r\n        gameIsOver,\r\n        setGameIsOver,\r\n        userWon,\r\n        setUserWon,\r\n        setHighScoreAnimation\r\n    }\r\n\r\n    getItemsFromStorage('highScore', setHighScore, highScore);\r\n    setItemsToStorage('highScore', highScore);\r\n\r\n    return (\r\n        <Container gameboard>\r\n            <Scoreboard stateObj={ stateObj }/>\r\n            <GameboardContainer>\r\n                { currentCards.map((item)=>{\r\n                    return <CharacterCard stateObj={ stateObj } obj={ item } key={ item.id }/>\r\n                }) }\r\n            </GameboardContainer>\r\n            <GameEndedMessage stateObj={ stateObj }/>\r\n            <NewHighScoreMessage className={ animation }>\r\n                <p>✨ New high score ✨</p>\r\n            </NewHighScoreMessage>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default GameBoard;","import {useEffect} from 'react';\r\n\r\n// If localStorage is empty, set state using stateUpdater with stateContent values\r\nfunction getItemsFromStorage(dataName, stateUpdater, stateContent) {\r\n    useEffect(() => {\r\n        if ( localStorage.getItem(dataName) ) {\r\n            stateUpdater(JSON.parse(localStorage.getItem(dataName)))\r\n        } else {\r\n            stateUpdater(stateContent)\r\n        }\r\n    }, [])\r\n}\r\n\r\n// If statesName changes, push that changed data to localStorage\r\nfunction setItemsToStorage(dataName, statesName) {\r\n    useEffect(() => {\r\n        localStorage.setItem(dataName, JSON.stringify(statesName))\r\n    }, [statesName])\r\n}\r\n\r\nexport {\r\n    setItemsToStorage,\r\n    getItemsFromStorage,\r\n}","import React, { useState } from 'react';\r\nimport { Title } from \"./Header\";\r\n\r\nimport { Container, Btn, BtnContainer, Paragraph } from \"./Styles/generalStyles\";\r\nimport { StartBtn } from \"./Styles/startingScreenStyles\";\r\n\r\n\r\nfunction StartingScreen(props) {\r\n    const [difficultySelected, setDifficultySelected] = useState(false);\r\n\r\n    function selectLevel(level) {\r\n        props.setGameMode(level)\r\n        setDifficultySelected(true);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title/>\r\n            <Paragraph>This is Sailor Moon memory game. <br/> Your job is to click every character but only\r\n                once. If you get all of the characters you win!\r\n            </Paragraph>\r\n            <Paragraph>First select difficulty level:</Paragraph>\r\n            <BtnContainer>\r\n                <Btn onClick={ ()=>selectLevel('Easy') } easy>Easy</Btn>\r\n                <Btn onClick={ ()=>selectLevel('Medium') }>Medium</Btn>\r\n                <Btn onClick={ ()=>selectLevel('Hard') } hard>Hard</Btn>\r\n            </BtnContainer>\r\n            <StartBtnContainer difficultySelected={ difficultySelected } setGameIsStarted={ props.setGameIsStarted }/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nfunction StartBtnContainer(props) {\r\n    if ( props.difficultySelected ) {\r\n        return (\r\n            <div className=\"slide-up\">\r\n                <Paragraph>Then you can start the game when you are ready. <br/> Good luck ✨</Paragraph>\r\n                <BtnContainer start=\"true\">\r\n                    <StartBtn active={ props.difficultySelected } onClick={ ()=>{\r\n                        props.difficultySelected ? props.setGameIsStarted(true) : console.log('Difficulty level not' +\r\n                            ' yet selected');\r\n                    } }>start</StartBtn>\r\n                </BtnContainer>\r\n            </div>\r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n\r\nexport default StartingScreen;","import React, { useState } from 'react'\r\n\r\nimport { Header } from \"./Header\";\r\nimport GameBoard from \"./gameboard/Gameboard\";\r\nimport StartingScreen from \"./StartingScreen\";\r\n\r\nfunction App() {\r\n    const [gameMode, setGameMode] = useState('');\r\n    const [gameIsStarted, setGameIsStarted] = useState(false);\r\n\r\n    if ( !gameIsStarted ) {\r\n        return <StartingScreen setGameMode={ setGameMode } setGameIsStarted={ setGameIsStarted }/>\r\n    } else {\r\n        return (\r\n            <>\r\n                <Header/>\r\n                <GameBoard gameMode={ gameMode } setGameMode={ setGameMode }/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n/**/\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles.css';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\t__webpack_require__.O();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmemory_game\"] = self[\"webpackChunkmemory_game\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(703)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}